#!/bin/sh /etc/rc.common
# Copyright (C) 2008-2011 OpenWrt.org

START=63

list_name=""
space=" "
key=1
temp=""
enable_server=0
enable_printer=0

DATE=`date +%F_%H:%M:%S`
LOG="/tmp/samba.log"

isEnableServer() {
	local enable
	config_get enable $1 enable

	if [ 1 -eq $enable ]; then
			enable_server=1
	fi
}

global() {
	local interface
	local netbios_name
	config_get interface $1 interface "loopback lan"
	config_get netbios_name $1 netbios

	# resolve interfaces
	local interfaces=$(
		include /lib/network
		scan_interfaces

		local net
		for net in $interface; do
			local ifname
			config_get ifname "$net" ifname
			[ -n "$ifname" ] && {
				local ipaddr netmask
				config_get ipaddr  "$net" ipaddr
				config_get netmask "$net" netmask
				[ -n "$ipaddr" ] && echo -n "$ipaddr/${netmask:-255.255.255.255} "

				local ip6addr
				config_get ip6addr "$net" ip6addr
				[ -n "$ip6addr" ] && echo -n "$ip6addr "
			}

			echo -n "${ifname:-$net} "
		done
	)

	local workgroup description charset
	local hostname="$(uci_get system.@system[0].hostname)"

	config_get workgroup   $1 workgroup   "${hostname:-OpenWrt}"
	config_get description $1 description "Samba on ${hostname:-OpenWrt}"
	config_get charset     $1 charset     "UTF-8"

	mkdir -p /var/etc
	sed -e "s#|NAME|#$netbios_name#g" \
	    -e "s#|WORKGROUP|#$workgroup#g" \
	    -e "s#|DESCRIPTION|#$description#g" \
	    -e "s#|INTERFACES|#$interfaces#g" \
	    -e "s#|CHARSET|#$charset#g" \
	    /etc/samba/smb.conf.template > /var/etc/smb.conf

	[ -L /etc/samba/smb.conf ] || ln -nsf /var/etc/smb.conf /etc/samba/smb.conf
}

addShare() {
	local path
	local users
	local anon_auth
	local create_mask
	local dir_mask
	local read_list
	local write_list
	local share_name
    config_get path $1 path
    config_get anon_auth $1 anon_auth
	config_get read_list $1 ro_list
	config_get write_list $1 rw_list
	config_get share_name $1 share_name
	
	if [ ! -d "$path" ]; then
		results=`uci show samba | grep "$path" | cut -d "=" -f 1`
		for result in $results
		do
			path_temp=`uci get $result`
			if [ "$path_temp" = "$path" ]; then
				result=${result%.*}
				uci delete $result
                uci commit samba
                return
			fi
		done
	fi
	path_len=${#path}
    path_len=`expr $path_len - 1`
    if [ ${path:$path_len:1} == "/" ]; then
        path=${path%/}
    fi
	
	str=","

	a=0
	rolist=" "
	for read in $read_list
	do
		if [ 0 -eq $a ]; then
			rolist=$read
			let a++
		else
			rolist="$rolist"$str$read
		fi
	done

	b=0
	rwlist=" "
	for write in $write_list
	do
		if [ 0 -eq $b ]; then
			rwlist=$write
			let b++
		else
			rwlist="$rwlist"$str$write
		fi
	done
	if [ $rolist ]; then
		if [ $rwlist ]; then
			users=$rolist$str$rwlist
		else
			users=$rolist
		fi
    else
		if [ $rwlist ]; then
			users=$rwlist
		else
			users="nobody"
		fi
    fi
	start=${path##*/}
	start_len=${#start}
	flag=0
	start_str=""
	for str in $start
	do
		if [ "$start" = "$str" ]; then
			flag=1
		fi
		if [ 0 -eq $flag ]; then
			start=${start//$space/:}
		fi
	done
	
	num=1
	checkName $start $start $num
	name=$temp
	name=${name//:/$space}
	list_name=$list_name$space$temp
	
	if [ "$share_name" ];then
		if [ "$share_name" == "$name" ];then
			name=$name
		else 
			name=$share_name
		fi
	fi
	
	if [ $anon_auth == "0" ]; then
	echo -e "\n[$name]\n\tpath = $path" >> /var/etc/smb.conf
	[ -n "$users" ] && echo -e "\tvalid users = $users" >> /var/etc/smb.conf
	[ -n "$anon_auth" ] && echo -e "\tguest ok = no" >> /var/etc/smb.conf
		echo -e "\tcreate mask = 0755" >> /var/etc/smb.conf
		echo -e "\tdirectory mask = 0755" >> /var/etc/smb.conf
	[ -n "$rolist" ] && echo -e "\tread list = $rolist" >> /var/etc/smb.conf
	[ -n "$rwlist" ] && echo -e "\twrite list = $rwlist" >> /var/etc/smb.conf
	elif [ $anon_auth == "1" ]; then
		echo -e "\n[$name]\n\tpath = $path" >> /var/etc/smb.conf
		[ -n "$anon_auth" ] && echo -e "\tguest ok = yes" >> /var/etc/smb.conf
		echo -e "\tcreate mask = 0755" >> /var/etc/smb.conf
		echo -e "\tdirectory mask = 0755" >> /var/etc/smb.conf
		echo -e "\twriteable = no" >> /var/etc/smb.conf
		[ -n "$rolist" ] && echo -e "\tread list = $rolist" >> /var/etc/smb.conf
		[ -n "$rwlist" ] && echo -e "\twrite list = $rwlist" >> /var/etc/smb.conf
	elif [ $anon_auth == "2" ]; then
		 echo -e "\n[$name]\n\tpath = $path" >> /var/etc/smb.conf
		[ -n "$anon_auth" ] && echo -e "\tguest ok = yes" >> /var/etc/smb.conf
		echo -e "\tcreate mask = 0755" >> /var/etc/smb.conf
		echo -e "\tdirectory mask = 0755" >> /var/etc/smb.conf
		echo -e "\twriteable = yes" >> /var/etc/smb.conf
		[ -n "$rolist" ] && echo -e "\tread list = $rolist" >> /var/etc/smb.conf
		[ -n "$rwlist" ] && echo -e "\twrite list = $rwlist" >> /var/etc/smb.conf
	fi
}
checkName(){
        start=$1
        end=$2
        key=$3
        for value in $list_name
        do
                flag=1
                if [ $end == $value ]
                then
                        end=$start"($num)"
                        let num++
                        checkName $start $end $num
                        flag=0
                fi
        done
        if [ $flag==1 ];then
                temp=$end
        fi
}
addPrint() {
        local name
        local path
        local browsable
        local guest_ok
        local printable

        if [ ! -d /var/spool/samba ]                                                             
        then                                                                                                                                                
                mkdir -p /var/spool/samba                                                        
                chmod 777 /var/spool/samba                                                       
        fi

        config_get name $1 printer
		for print_name in $name
		do
			[ -z "$print_name" ] && return
			enable_printer=1
			echo -e "\n[$print_name]\n\tpath = /var/spool/samba" >> /var/etc/smb.conf
			echo -e "\tbrowsable = yes" >> /var/etc/smb.conf
			echo -e "\tguest ok = yes" >> /var/etc/smb.conf
			echo -e "\tprintable = yes" >> /var/etc/smb.conf
			echo -e "\tuse client driver = yes" >> /var/etc/smb.conf
		done

}
addUser(){
        local name
        local passwd

        config_get name $1 name
        config_get passwd $1 passwd

        smbpasswd $name $passwd
}
diskCheck(){
	
##if the disk has not mounted,then we can't do any operation.
	
	uci get samba.@print[0].printer > /dev/null 2>&1
	if [ $? -eq 0 ];then
		local printer=`uci get samba.@print[0].printer`
	else
		local printer=""
	fi
	if [ -f "/tmp/devices" ];then
		discovery_disk=`cat /tmp/devices`
		if [ -n "$discovery_disk" ];then
			echo -e  "[$DATE]-\033[32m The usb-storage is ready\033[0m" >> $LOG
		else
			if [ -n "$printer" ];then
				echo -e  "[$DATE]-\033[32m There is no external usb-storage,so just samba-print service is going to work! \033[0m" >> $LOG
			else
				echo -e  "[$DATE]-\033[31m The usb-storage is not ready\n \tPlease make it be ready firstly!\033[0m" >> $LOG
				echo -e  "[$DATE]-\033[31m So now i must set the samba server to be disabled to avoid any error!\033[0m" >> $LOG
				uci set samba.@global[0].enable="0"
				uci commit samba
				exit
			fi
		fi
	else
		 if [ -n "$printer" ];then             
		 	echo -e  "[$DATE]-\033[32m There is no external usb-storage,so just samba-print service is going to work! \033[0m" >> $LOG
		 else 
		 	echo -e  "[$DATE]-\033[31m The usb-storage is not ready\n \tPlease make it be ready firstly!\033[0m" >> $LOG
		 	echo -e  "[$DATE]-\033[31m So now i must set the samba to be disabled to avoid any error!\033[0m" >> $LOG
		 	uci set samba.@global[0].enable="0"
		 	uci commit samba
		 	exit
		 fi
		                                                                                                 	
	fi

}
shareCheck(){
	
	count=`cat /etc/config/samba |grep "config share" -c`
	let count=count-1
	
	while [ $count -ge 0 ]
	do
		local shared_folder=`uci get samba.@share[$count].path`
		if [ ! -d "$shared_folder" ];then
			uci del samba.@share[$count]
		else
			anon_auth=`uci get samba.@share[$count].anon_auth`
			if [ $anon_auth -eq 0 ];then
				local ro_list=""
				local rw_list=""
				uci get samba.@share[$count].ro_list > /dev/null 2>&1
				[ $? -eq 0 ] && ro_list=`uci get samba.@share[$count].ro_list`
				
				uci get samba.@share[$count].rw_list > /dev/null 2>&1
				[ $? -eq 0 ] && rw_list=`uci get samba.@share[$count].rw_list`
				if [ -z "$ro_list" -a -z "$rw_list" ];then
					uci del samba.@share[$count]
				fi
			fi 
		fi
		
		let count--
	done
	
	uci commit samba
		
}

start() {
		
		diskCheck
		shareCheck
			
		rm -rf /etc/samba/smb.conf
		config_load samba
		config_foreach isEnableServer global
		config_foreach global global
		if [ 1 -eq $enable_server ]; then
			config_load pwd
			config_foreach addUser userinfo
			config_load samba
			config_foreach addShare share
		fi
		config_load samba
		config_foreach addPrint print
		if [ 1 -eq $enable_server ] || [ 1 -eq $enable_printer ]; then
				smbd -D
				nmbd -D
		fi
}

stop() {
	pkill smbd
	pkill nmbd
}
