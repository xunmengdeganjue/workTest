#!/bin/sh /etc/rc.common

pool_start="0"
pool_start="ffff"

getpool(){
        local glopt="$1"
        config_get pool_start "$glopt" pool_start
        config_get pool_stop "$glopt" pool_stop
}

setwan6MTU()
{
	local wan_mtu

	config_get wan_mtu "$globalopt" wan_mtu
	uci set network.eth0.mtu=$wan_mtu

	uci commit network
}

setMTT(){
	#do something from global to dibbler
	echo "do setMTT function" > /dev/console
	local globalopt="$1"
	local tunnel_mtu
	local tunnel_ttl
	
	config_get tunnel_mtu "$globalopt" tunnel_mtu
	config_get tunnel_ttl "$globalopt" tunnel_ttl
	
	uci set network.wan6.mtu=$tunnel_mtu
	uci set network.wan6.ttl=$tunnel_ttl
	
	uci commit network
}

setopt_dib(){
	local globalopt="$1"
	local dns
	local sntp
	local domain
	local dnsstr="  option dns-server "
	local sntpstr="  option ntp-server "
	local domainstr="  option domain "
	local stringdest
	local slinenum
	local astr=" "
	local bstr=","
	
	config_get dns "$globalopt" dns
	config_get sntp "$globalopt" sntp
	config_get domain "$globalopt" domain

	#set the dns server infor
	if [ "$dns" != "" ];then
		echo "dns before: $dns" > /dev/console
		dns=${dns//"$astr"/"$bstr"}
		echo "dns after: $dns" > /dev/console
		stringdest="$dnsstr""$dns"
		slinenum=`grep -rn "option dns-server" /etc/dibbler/server.conf.temp |cut -d":" -f 1`
		sed -i "${slinenum}c\\$stringdest" /etc/dibbler/server.conf.temp	
	fi
	
	#set the ntp-server infor
	if [ "$sntp" != "" ];then
		sntp=${sntp//"$astr"/"$bstr"}
		stringdest="$sntpstr""$sntp"                                                           
		slinenum=`grep -rn "option ntp-server" /etc/dibbler/server.conf.temp |cut -d":" -f 1`
		sed -i "${slinenum}c\\$stringdest" /etc/dibbler/server.conf.temp
	fi
	
	#set the domain infor
	if [ "$domain" != "" ];then
		domain=${domain//"$astr"/"$bstr"}
		stringdest="$domainstr""$domain"
		slinenum=`grep -rn "option domain" /etc/dibbler/server.conf.temp |cut -d":" -f 1`
		sed -i "${slinenum}c\\$stringdest" /etc/dibbler/server.conf.temp
	fi
}


setdns(){
	#do something to set the dns
	local globalopt="$1"
	local connection_type
	local ipv6_dns1
	local ipv6_dns2
	local ipv6_dns3
	local stringtemp="option dns-server "
	local string
	local string1
	local slinenum	

	config_get connection_type "$globalopt" connection_type
	config_get ipv6_dns1 "$globalopt" ipv6_dns1
	config_get ipv6_dns2 "$globalopt" ipv6_dns2
	config_get ipv6_dns3 "$globalopt" ipv6_dns3
	
	echo "ipv6_dns1:$ipv6_dns1" > /dev/console
	echo "ipv6_dns2:$ipv6_dns2" > /dev/console
	echo "ipv6_dns3:$ipv6_dns3" > /dev/console

	
	if [ connection_type != "0" ];then
		#set dns information to dibbler
		#judge the dns is zero or not,if not save make the 
		#string and save it to template
		if [ "$ipv6_dns1" = "" ]; then
			if [ "$ipv6_dns2" = "" ]; then
				if [ "$ipv6_dns3" = "" ]; then
					string=""
					string1=""
				elif [ "$ipv6_dns3" != "" ]; then
					string="$stringtemp""$ipv6_dns3"
					string1="$ipv6_dns3"
				fi
			elif [ "$ipv6_dns2" != "" ]; then
                        	if [ "$ipv6_dns3" = "" ]; then
                                	string="$stringtemp""$ipv6_dns2"
                                	string1="$ipv6_dns2"
                        	elif [ "$ipv6_dns3" != "" ]; then
                                	string="$stringtemp""$ipv6_dns2"",""$ipv6_dns3"
                                	string1="$ipv6_dns2"" ""$ipv6_dns3"
                        	fi			
			fi
		elif [ "$ipv6_dns1" != "" ]; then
                	echo "dns1 is not """ > /dev/console
                	if [ "$ipv6_dns2" = "" ]; then
                        	if [ "$ipv6_dns3" = "" ]; then
                                	string="$stringtemp""$ipv6_dns1"
                                	string1="$ipv6_dns1"
                        	elif [ "$ipv6_dns3" != "" ]; then
                                	string="$stringtemp""$ipv6_dns1"",""$ipv6_dns3"
                                	string1="$ipv6_dns1"" ""$ipv6_dns3"
                        	fi
                	elif [ "$ipv6_dns2" != "" ]; then
                		echo "dns2 is not """ > /dev/console
                        	if [ "$ipv6_dns3" = "" ]; then
                                	string="$stringtemp""$ipv6_dns1"",""$ipv6_dns2"
                                	string1="$ipv6_dns1"" ""$ipv6_dns2"
                        	elif [ "$ipv6_dns3" != "" ]; then
                        		echo "dns3 is not """ > /dev/console
                                	string="$stringtemp""$ipv6_dns1"",""$ipv6_dns2"",""$ipv6_dns3"
                                	string1="$ipv6_dns1"" ""$ipv6_dns2"" ""$ipv6_dns3"
                                	echo "the dns-server:$string" > /dev/console
                        	fi                      
                	fi
		fi
		echo "the dns-server:$string" > /dev/console
		#sed -i "s#|DNSSERVER|#$string#g" /etc/dibbler/server.conf.temp
		slinenum=`grep -rn "option dns-server" /etc/dibbler/server.conf.temp |cut -d":" -f 1`
		sed -i "${slinenum}c\\$string" /etc/dibbler/server.conf.temp
	
		uci set network.wan6.dns="$string1"
		uci commit network
	fi
}


set_sntp(){
        #do something to set the dns                 
        local globalopt="$1"                        
        local ipv6_ntp1                             
        local ipv6_ntp2                             
        local ipv6_ntp3                         
        local stringtemp="option ntp-server "   
        local string                            
        local string1
	local slinenum                           
                                                     
        config_get ipv6_ntp1 "$globalopt" ipv6_ntp1  
        config_get ipv6_ntp2 "$globalopt" ipv6_ntp2  
        config_get ipv6_ntp3 "$globalopt" ipv6_ntp3  
                                                     
        echo "ipv6_dns1:$ipv6_ntp1" > /dev/console   
        echo "ipv6_dns2:$ipv6_ntp2" > /dev/console   
        echo "ipv6_dns3:$ipv6_ntp3" > /dev/console	

        #set dns information to dibbler            
        #judge the dns is zero or not,if not save make the
        #string and save it to template                   
        if [ "$ipv6_ntp1" = "" ]; then                    
                if [ "$ipv6_ntp2" = "" ]; then            
                        if [ "$ipv6_ntp3" = "" ]; then    
                                string="$stringtemp""2000::200,2000::201,2000::202" 
                        elif [ "$ipv6_ntp3" != "" ]; then 
                                string="$stringtemp""$ipv6_ntp3"
                        fi                                      
                elif [ "$ipv6_ntp2" != "" ]; then               
                        if [ "$ipv6_ntp3" = "" ]; then          
                                string="$stringtemp""$ipv6_ntp2"
                        elif [ "$ipv6_ntp3" != "" ]; then       
                                string="$stringtemp""$ipv6_ntp2"",""$ipv6_ntp3"
                        fi                                                     
                fi
        elif [ "$ipv6_ntp1" != "" ]; then                                      
                if [ "$ipv6_ntp2" = "" ]; then                  
                        if [ "$ipv6_ntp3" = "" ]; then          
                                string="$stringtemp""$ipv6_ntp1"
                        elif [ "$ipv6_ntp3" != "" ]; then       
                                string="$stringtemp""$ipv6_ntp1"",""$ipv6_ntp3"
                        fi                                                     
                elif [ "$ipv6_ntp2" != "" ]; then                              
                        if [ "$ipv6_ntp3" = "" ]; then                         
                                string="$stringtemp""$ipv6_ntp1"",""$ipv6_ntp2"
                        elif [ "$ipv6_ntp3" != "" ]; then                      
                                string="$stringtemp""$ipv6_ntp1"",""$ipv6_ntp2"",""$ipv6_ntp3"
                        fi                                                                    
                fi                                                                            
        fi
        echo "the ntp-server:$string" > /dev/console                                          
	if [ -n "$string"]; then
		slinenum=`grep -rn "option ntp-server" /etc/dibbler/server.conf.temp |cut -d":" -f 1`
		sed -i "${slinenum}c\\$string" /etc/dibbler/server.conf.temp	
	fi
}

setlifetime(){
	local global="$1"
	local lifetime
	local stringlifetime

	config_get lifetime "$global" lifetime

	stringlifetime=" option lifetime "$lifetime
	sed -i "s#|LIFETIME|#$stringlifetime#g" /etc/dibbler/server.conf.temp
}

do_native(){
	#do dibbler-server and dibbler-client setup
	echo "do ipv6 native" > /dev/console
	local native="$1"
	local dhcp_pd
	local ipv6_addr
	local prefix_len
	local ipv6_prefix
	local auto_config
	local ipv6dns_auto
	local string
	local addrstr
	local stringtemp
	local stringtarget
	local stringative
	local strspc
	local pd_preferred_lifetime 
	local pd_valid_lifetime  
	
	config_get dhcp_pd "$native" dhcp_pd
	config_get ipv6_addr "$native" ipv6_addr
	config_get prefix_len "$native" prefix_len
	config_get ipv6_prefix "$native" ipv6_prefix
	config_get auto_config "$native" auto_config
	config_get ipv6dns_auto "$native" ipv6dns_auto
	config_get pd_preferred_lifetime "$native" pd_preferred_lifetime
	config_get pd_valid_lifetime "$native" pd_valid_lifetime 
	
	config_load ipv6
    	config_foreach getpool global

	#echo "dhcp_pd:$dhcp_pd" > /dev/console
	#echo "ipv6_addr:$ipv6_addr" > /dev/console
	#echo "prefix_len:$prefix_len" > /dev/console
	#echo "ipv6_prefix:$ipv6_prefix" > /dev/console
	#echo "auto_config:$auto_config" > /dev/console
	#echo "pool_start:$pool_start" > /dev/console
	#echo "pool_stop:$pool_stop" > /dev/console
	#echo "pd_valid_lifetime:$pd_valid_lifetime" > /dev/console
	#echo "pd_preferred_lifetime:$pd_preferred_lifetime" > /dev/console
	
	#get the configure and do prepare
	cp /etc/dibbler/server.conf.template /etc/dibbler/server.conf.temp              
	
	#judge the autoconfig and set the lan ipv6 address and ipv6 prefix
	##use the stateful mode
	if [ $auto_config -eq 0 ];then
		string="class {\n  pool "
		#delete the "stateless" in dibbler server-conf
		stringative=""
		echo "delete the stateless" > /dev/console
		sed -i "s#|STATELESS|#$stringative#g" /etc/dibbler/server.conf.temp
		addrstr=$ipv6_prefix$pool_start"-"$ipv6_prefix$pool_stop
		stringtemp="\n }"
		stringtarget="$string""$addrstr""$stringtemp"
		sed -i "s#|CLASS|#$stringtarget#g" /etc/dibbler/server.conf.temp
		
		local pd_cnt_head="pd-class{ \n "
		local pd_cnt_prefix="\t pd-pool $ipv6_prefix"/"$prefix_len \n"
		local pd_cnt_prelen="\t pd-length $prefix_len \n"
		local pd_cnt_prelifetime="\t preferred-lifetime $pd_preferred_lifetime \n"
		local pd_cnt_vallifetime="\t valid-lifetime $pd_valid_lifetime \n"
		local pd_cnt_tail=" }"
		local pd_content="$pd_cnt_head""$pd_cnt_prefix""$pd_cnt_prelen""$pd_cnt_prelifetime""$pd_cnt_vallifetime""$pd_cnt_tail"
		sed -i "s#|PDCLASS|#$pd_content#g" /etc/dibbler/server.conf.temp
		
		##write the /etc/config/network
		#string=$ipv6_prefix"1/"$prefix_len
		string=$ipv6_addr"/"$prefix_len
		uci set network.lan.ip6addr=$string
		uci commit network
	
	##use the stateless mode
	elif [ $auto_config -eq 1 ]; then
		#set STATELESS in dibbler server.conf
		stringative="stateless"
		sed -i "s#|STATELESS|#$stringative#g" /etc/dibbler/server.conf.temp		
	
		#set address of lan ipv6
		stringtarget=""
		sed -i "s#|CLASS|#$stringtarget#g" /etc/dibbler/server.conf.temp
	
		#delete PD in server.conf and client.conf
		stringnative=""
		sed -i "s#|PDCLASS|#$stringnative#g" /etc/dibbler/server.conf.temp
		
		#string=$ipv6_addr"/"$prefix_len
		string=$ipv6_addr"/64" ##here set the prefix_len to be 64,because the client just reconginize the 64 bit prefix in stateless mode.
		
		uci set network.lan.ip6addr=$string
		uci commit network
		uci set ipv6.@native[0].prefix_len=64
		uci commit ipv6
	fi	
	
	#set lifetime
	config_load ipv6
	config_foreach setlifetime global

	
	#delete TACLASS
	string=""
	sed -i "s#|TACLASS|#$string#g" /etc/dibbler/server.conf.temp
	
	#judge the ipv6dns_auto is enable or not and set the dns
	if [ "$ipv6dns_auto" = "0" ]; then
		#set the dns to option dns-server
		config_load ipv6
        	config_foreach setdns global
	elif [ "$ipv6dns_auto" = "1" ]; then
		#delete the dns-server option in server.conf
		string=""
		sed -i "s#|DNSSERVER|#$string#g" /etc/dibbler/server.conf.temp
	fi	

	uci set network.wan6.proto="dhcpv6"
	uci commit network

	#set the mtu for wan6
	config_load ipv6
	config_foreach setwan6MTU global

	#set the sntp_server to option sntp_server of dibbler server
	#config_load ipv6
	#config_foreach set_sntp global

	#set the dns sntp and domain infor to dibbler-server
	config_load ipv6
	config_foreach setopt_dib global

	rm -rf /etc/dibbler/server.conf
   	mv /etc/dibbler/server.conf.temp /etc/dibbler/server.conf
}

do_6to4(){
	#do something
	echo "do ipv6 6to4" > /dev/console
	local stfopt="$1"
	local ipv4anycast_relay
	local lanipv6_addr
	local lanprefix_len
	local lanipv6_prefix
	local radvdprefix
	local string
	local addrstr
	local stringtemp
	local stringtarget
	local stringative
	local strspc	
	
	config_get ipv4anycast_relay "$stfopt" ipv4anycast_relay
	config_get lanipv6_addr "$stfopt" lanipv6_addr
	config_get lanprefix_len "$stfopt" lanprefix_len
	config_get lanipv6_prefix "$stfopt" lanipv6_prefix

	#get the configure and do prepare
	cp /etc/dibbler/server.conf.template /etc/dibbler/server.conf.temp              
	cp /etc/dibbler/client.conf.template /etc/dibbler/client.conf.temp
	
	uci set network.wan6.proto=6to4
	uci set network.wan6.adv_interface="lan wan"
	uci set network.wan6.adv_subnet=1
	uci set network.wan6.adv_valid_lifetime=86400
	string=$lanipv6_prefix"/"$lanprefix_len
	uci set network.lan.ip6prefix=$string
	uci commit network
	
	#set MTU and TLL
	config_load ipv6
	config_foreach setMTT global

	#do something to dibbler server configuration
	#disable dhcp-pd
	#delete the pd class
	string=""
	sed -i "s#|PDCLASS|#$string#g" /etc/dibbler/server.conf.temp
	sed -i "s#|PD|#$string#g" /etc/dibbler/client.conf.temp

	#delete the "stateless" in dibbler server-conf
	stringative=""
	sed -i "s#|STATELESS|#$stringative#g" /etc/dibbler/server.conf.temp
	
	#set address of lan ipv6
	string="class {\n  pool "
	addrstr="$lanipv6_addr""/""$lanprefix_len"
	stringtemp="\n }"
	stringtarget="$string""$addrstr""$stringtemp"
	sed -i "s#|CLASS|#$stringtarget#g" /etc/dibbler/server.conf.temp	

	#set lifetime
	config_load ipv6
	config_foreach setlifetime global
	
	#delete TACLASS
	string=""
    	sed -i "s#|TACLASS|#$string#g" /etc/dibbler/server.conf.temp
	
	config load ipv6
	config_foreach setdns global

        #set the sntp_server to option sntp_server of dibbler server
        config_load ipv6
        config_foreach set_sntp global

    	rm -rf /etc/dibbler/server.conf             
   	mv /etc/dibbler/server.conf.temp /etc/dibbler/server.conf
}

do_6in4(){
	#do something
	echo "do ipv6 6in4" > /dev/console
	local sinfopt="$1"
	local serveripv4_addr
	local clientipv6_addr
	local ipv6prefix_len
	local serveripv6_addr
	local lanipv6_addr
	local lanprefix_len
	local lanipv6_prefix
	local clientipv6addrtg
	local string
	local addrstr
	local stringtemp
	local stringtarget
	local stringative
	local strspc
	
	config_get serveripv4_addr "$sinfopt" serveripv4_addr
	config_get clientipv6_addr "$sinfopt" clientipv6_addr
	config_get ipv6prefix_len "$sinfopt" ipv6prefix_len
	config_get serveripv6_addr "$sinfopt" serveripv6_addr
	config_get lanipv6_addr "$sinfopt" lanipv6_addr
	config_get lanprefix_len "$sinfopt" lanprefix_len
	config_get lanipv6_prefix "$sinfopt" lanipv6_prefix
	
	#get the configure and do prepare
	cp /etc/dibbler/server.conf.template /etc/dibbler/server.conf.temp              
	cp /etc/dibbler/client.conf.template /etc/dibbler/client.conf.temp	
	
	clientipv6addrtg="$clientipv6_addr""/""$ipv6prefix_len"
	uci set network.wan6.proto=6in4
	uci set network.wan6.peeraddr=$serveripv4_addr
	uci set network.wan6.ip6addr=$clientipv6addrtg
	uci set network.wan6.ip6prefix=$serveripv6_addr
	
	#set the lan ipv6addr to network interface "lan"
	#use the lanipv6_prefix and lanprefix_len to make the ipv6addr and set it to lan
	lanipv6_addr="$lanipv6_prefix""::1/""$lanprefix_len"
	uci set network.lan.ip6addr=$lanipv6_addr	
	string=$lanipv6_prefix"/"$lanprefix_len
	uci set network.lan.ip6prefix=$string
	uci commit network

	#set MTU and TLL
	config_load ipv6
	config_foreach setMTT global

	#do something to dibbler server configuration
	#disable dhcp-pd
	#delete the pd class
	string=""
	sed -i "s#|PDCLASS|#$string#g" /etc/dibbler/server.conf.temp
	sed -i "s#|PD|#$string#g" /etc/dibbler/client.conf.temp

	#delete the "stateless" in dibbler server-conf
	stringative=""
	sed -i "s#|STATELESS|#$stringative#g" /etc/dibbler/server.conf.temp
	
	#set address of lan ipv6
	string="class {\n  pool "
	addrstr="$lanipv6_addr""/""$lanprefix_len"
	stringtemp="\n }"
	stringtarget="$string""$addrstr""$stringtemp"
	sed -i "s#|CLASS|#$stringtarget#g" /etc/dibbler/server.conf.temp	

	#set lifetime
	config_load ipv6
	config_foreach setlifetime global
	
	#delete TACLASS
	string=""
    	sed -i "s#|TACLASS|#$string#g" /etc/dibbler/server.conf.temp
	
	#set dns information
	config load ipv6
	config_foreach setdns global	

        #set the sntp_server to option sntp_server of dibbler server
        config_load ipv6
        config_foreach set_sntp global

	rm -rf /etc/dibbler/server.conf
   	mv /etc/dibbler/server.conf.temp /etc/dibbler/server.conf
}

do_6rd(){
	#do something
	echo "do ipv6 6rd" > /dev/console
	local srdopt="$1"
	local dhcp_option
	local ipv6_prefix
	local ipv6prefix_len
	local ipv4border_router
	local ipv4router_mklen
	local lanipv6_addr
	local lanprefix_len
	local lanipv6_prefix
	local string
	local addrstr
	local stringtemp
	local stringtarget
	local stringative
	local strspc

	#get the configure and do prepare
	cp /etc/dibbler/server.conf.template /etc/dibbler/server.conf.temp              

	#get the option of 6rd
	config_get dhcp_option "$srdopt" dhcp_option
	config_get ipv6_prefix "$srdopt" ipv6_prefix
	config_get ipv6prefix_len "$srdopt" ipv6prefix_len
	config_get ipv4border_router "$srdopt" ipv4border_router
	config_get ipv4router_mklen "$srdopt" ipv4router_mklen
	config_get lanipv6_addr "$srdopt" lanipv6_addr
	config_get lanprefix_len "$srdopt" lanprefix_len
	config_get lanipv6_prefix "$srdopt" lanipv6_prefix
	
	#set the network information to network config file
	uci set network.wan6.proto=6rd
	uci set network.wan6.peeraddr="$ipv4border_router"
	uci set network.wan6.ip6prefix="$ipv6_prefix"
	uci set network.wan6.ip6prefixlen="$ipv6prefix_len"
	uci set network.wan6.ip4prefixlen="$ipv4router_mklen"
	string=$lanipv6_prefix"/"$lanprefix_len
	uci set network.lan.ip6prefix=$string
	uci commit network
	
	#set MTU and TLL
	config_load ipv6
	config_foreach setMTT global

	#do something to dibbler server configuration
	#disable dhcp-pd
	#delete the pd class
	string=""
	sed -i "s#|PDCLASS|#$string#g" /etc/dibbler/server.conf.temp
	sed -i "s#|PD|#$string#g" /etc/dibbler/client.conf.temp

	#delete the "stateless" in dibbler server-conf
	stringative=""
	sed -i "s#|STATELESS|#$stringative#g" /etc/dibbler/server.conf.temp
	
	#set address of lan ipv6
	string="class {\n  pool "
	addrstr="$lanipv6_addr""/""$lanprefix_len"
	stringtemp="\n }"
	stringtarget="$string""$addrstr""$stringtemp"
	sed -i "s#|CLASS|#$stringtarget#g" /etc/dibbler/server.conf.temp	

	#set lifetime
	config_load ipv6
	config_foreach setlifetime global
	
	#delete TACLASS
	string=""
    	sed -i "s#|TACLASS|#$string#g" /etc/dibbler/server.conf.temp
	
	#set dns information
	config load ipv6
	config_foreach setdns global

        #set the sntp_server to option sntp_server of dibbler server
        config_load ipv6
        config_foreach set_sntp global

	rm -rf /etc/dibbler/server.conf
   	mv /etc/dibbler/server.conf.temp /etc/dibbler/server.conf
}

do_static(){
	#do something
	echo "do ipv6 static" > /dev/console
	local staticopt="$1"
	local wanipv6_addr
	local wanprefix_len
	local wanipv6_gateway   
	local lanipv6_addr
	local lanprefix_len
	local lanipv6_prefix
	local string
	local addrstr
	local stringtemp
	local stringtarget
	local stringative
	local strspc
	
	
	config_get wanipv6_addr "$staticopt" wanipv6_addr
	config_get wanprefix_len "$staticopt" wanprefix_len
	config_get wanipv6_gateway "$staticopt" wanipv6_gateway
	config_get lanipv6_addr "$staticopt" lanipv6_addr
	config_get lanprefix_len "$staticopt" lanprefix_len
	config_get lanipv6_prefix "$staticopt" lanipv6_prefix


    	config_load ipv6
    	config_foreach getpool global

	#get the configure and do prepare
	cp /etc/dibbler/server.conf.template /etc/dibbler/server.conf.temp              
	
	#set wan
	uci set network.wan6.proto=static
	string=$wanipv6_addr"/"$wanprefix_len
	uci set network.wan6.ip6addr=$string
	string=$wanipv6_gateway
	uci set network.wan6.ip6gw=$string
	
	config_load ipv6
	config_foreach setwan6MTU global
	
	#set lan
	uci set network.lan.proto=static
	string=$lanipv6_addr"/"$lanprefix_len
	uci set network.lan.ip6addr=$string
	string=$lanipv6_prefix"/"$lanprefix_len
	uci set network.lan.ip6prefix=$string

	#do something to dibbler server configuration
	#disable dhcp-pd
	#delete the pd class
	string=""
	sed -i "s#|PDCLASS|#$string#g" /etc/dibbler/server.conf.temp
	sed -i "s#|PD|#$string#g" /etc/dibbler/client.conf.temp

	#delete the "stateless" in dibbler server-conf
	stringative=""
	sed -i "s#|STATELESS|#$stringative#g" /etc/dibbler/server.conf.temp
	
	#set address of lan ipv6
	string="class {\n  pool "
	#addrstr="$lanipv6_addr""/""$lanprefix_len"
	addrstr="$lanipv6_prefix""$pool_start""-""$lanipv6_prefix""$pool_stop"
	stringtemp="\n }"
	stringtarget="$string""$addrstr""$stringtemp"
	sed -i "s#|CLASS|#$stringtarget#g" /etc/dibbler/server.conf.temp	

	#set lifetime
	config_load ipv6
	config_foreach setlifetime global
	
	#delete TACLASS
	string=""
    	sed -i "s#|TACLASS|#$string#g" /etc/dibbler/server.conf.temp
	
	#set dns
	#config_load ipv6
	#config_foreach setdns global
	
	#uci set network.wan.dns=$string
	#uci set network.lan.dns=$string
	uci commit network

	#set radvd                                                         
	uci set radvd.@prefix[0].AdvAutonomous=0
	uci commit radvd

        #set the sntp_server to option sntp_server of dibbler server
        #config_load ipv6
        #config_foreach set_sntp global

	#set then dns sntp and domain infor
	config_load ipv6
	config_foreach setopt_dib global

	rm -rf /etc/dibbler/server.conf
   	mv /etc/dibbler/server.conf.temp /etc/dibbler/server.conf
}

do_dslite(){
	#do something
	echo "do ipv6 dslite" > /dev/console
	local dsliteopt="$1"
	local remoteipv6_addr
	local localipv6_addr 
	local lanipv4_addr
	local ipv4_netmask
		
	config_get remoteipv6_addr "$dsliteopt" remoteipv6_addr
	config_get localipv6_addr "$dsliteopt" localipv6_addr
	config_get lanipv4_addr "$dsliteopt" lanipv4_addr
	config_get ipv4_netmask "$dsliteopt" ipv4_netmask

	#set remote ipv6 address
	uci set network.wan.proto=dslite
	uci set network.wan.peeraddr="$remoteipv6_addr"
	uci set network.wan.ip6addr="$localipv6_addr"
	uci set network.lan.ipaddr="$lanipv4_addr"
	uci set network.lan.netmask="$ipv4_netmask"
	uci commit network

	#set MTU and TLL
	config_load ipv6
	config_foreach setMTT global

        #set the sntp_server to option sntp_server of dibbler server
        config_load ipv6
        config_foreach set_sntp global	
}

do_mapt(){
	#do something
        echo "do ipv6 map-t" > /dev/console

	local mapopt="$1"
	local enable

	config_get enable "$mapopt" enable
	if [ "$enable" = '0' ];then
		mv /lib/netifd/proto/map.sh /lib/netifd/map.sh
	else
		mv /lib/netifd/map.sh /lib/netifd/proto/map.sh
	fi
}

prepare(){
	local globalopt="$1"
	local connection_type
	local ipsixaddr
	local ipsixgw
	
	config_get connection_type "$globalopt" connection_type
	
	case "$connection_type" in
	0)
		#stop ipv6:stop dibbler-server and dibbler-client
		#stop dibbler
		killall -9 dibbler-client
		killall -9 dibbler-server
		uci set network.wan6.proto=""
		uci commit network
		;;
	1)	
		#do native prepare
		config_load ipv6
		config_foreach do_native native	
		;;		
	2)
		#do 6to4 prepare
		config_load ipv6
		config_foreach do_6to4 6to4
		;;
	3)
		#do 6in4 prepare
		config_load ipv6
		config_foreach do_6in4 6in4
		;;
	4)
		#do 6rd prepare
		config_load ipv6
		config_foreach do_6rd 6rd
		;;
	5)	
		#do static prepare
		config_load ipv6
		config_foreach do_static static
		;;
	6)
                #do map-t prepare
                config_load ipv6
                config_foreach do_mapt mapt
		;;
    	7)
                #do dslite prepare
                config_load ipv6
                config_foreach do_dslite dslite
	esac		
}

do_radvd(){
	#uci set radvd.@interface[0].ignore=0
	#uci set radvd.@prefix[0].ignore=0
	#uci commit radvd
	
	ps | grep radvd | grep -v grep
	if [ $? -eq 0 ] ;then
		/etc/init.d/radvd restart 
	 	echo -e "`date +"%F-%H:%M:%S"`-\033[33m restart the radvd \033[0m" >> /tmp/ipv6.log
	else
		echo -e "`date +"%F-%H:%M:%S"`-\033[33m start the radvd \033[0m" >> /tmp/ipv6.log 
		/etc/init.d/radvd start 
	fi
		
}

dibbler_restart(){
#	local globalopt="$1"
#	local connection_type
	
#	config_get connection_type "$globalopt" connection_type
	connection_type=`uci get ipv6.@global[0].connection_type`
	echo -e "`date +"%F-%H:%M:%S"`-\033[31m the connection_type is [$connection_type] \033[0m " >> /tmp/ipv6.log	
	if [ "$connection_type" != "0" ]; then
		echo -e "`date +"%F-%H:%M:%S"`-\033[31m Stop the dibbler-server \033[0m " >> /tmp/ipv6.log
		#/etc/init.d/dibbler-server stop
		killall -9 dibbler-server
		echo -e "`date +"%F-%H:%M:%S"`-\033[31m Sleep 2 second \033[0m " >> /tmp/ipv6.log
		sleep 2
		ps |grep dibbler-server |grep -v grep
		if [ $? -eq 1 ];then
			 echo -e "`date +"%F-%H:%M:%S"`-\033[32m dibbler-server restart! \033[0m" >> /tmp/ipv6.log
			 /etc/init.d/dibbler-server start
		else
			 echo -e "`date +"%F-%H:%M:%S"`-\033[31m dibbler-server restart error ! \033[0m" >> /tmp/ipv6.log
			 
		fi
	fi
}

start(){
	local opt="$1"
	
	if [ "$opt" = "do_dibbler_restart" ]; then
		config_load ipv6
		config_foreach dibbler_restart global
	else
		config_load ipv6
		config_foreach prepare global	
	fi
	
	do_radvd

	return 0
	
}

stop(){
	killall -9 dibbler-server
	killall -9 radvd
}
